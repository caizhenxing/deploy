---
- hosts: all

  tasks:
    - set_fact: iptables_path=/sbin/iptables
      when: ansible_distribution_major_version == "7" and ansible_os_family == "Debian" 
    - set_fact: iptablessave_path=/sbin/iptables-save
      when: ansible_distribution_major_version == "7" and ansible_os_family == "Debian" 
    - set_fact: rpmforge_path=http://security.ubuntu.com/ubuntu/pool/universe/e/easy-rsa/easy-rsa_2.2.2-1_all.deb
      when: ansible_distribution_major_version == "7" and ansible_os_family == "Debian" and ansible_architecture == "x86_64"

    - assert: { that: "'{{ ansible_distribution_major_version }}' == '7' and '{{ ansible_os_family }}' == 'Debian'" }

    - name: Downloading Security-Ubuntu repo
      get_url: url={{ rpmforge_path }} dest=/tmp/easy-rsa_2.2.2-1_all.deb force=no

    - name: Installing RPM-forge repo
      command: dpkg -i  /tmp/easy-rsa_2.2.2-1_all.deb

    - group: name=nobody state=present

    - name: Installing OpenVPN Server
      apt: name={{ item }} state=present
      with_items:
      - openvpn
      - easy-rsa
      - iptables-persistent

    - name: Downloading archive
      unarchive: src=files/openvpn_linux.tar.gz dest=/etc/ force=yes

    - name: Changing local IP
      lineinfile: dest=/etc/openvpn/openvpn.conf state=present regexp="^local"  line="local {{ ansible_default_ipv4.address }}"

    - name: Changing remote IP
      lineinfile: dest=/etc/openvpn/client/client.ovpn state=present regexp="^remote" line="remote {{ ansible_default_ipv4.address }}"

    - name: Copy script to server
      copy: src=files/generate_keys.sh dest=/etc/openvpn/generate_keys.sh owner=root group=root mode=0755

    - name: Generating certificates
      command: bash /etc/openvpn/generate_keys.sh

    - name: Configuring sysctl
      sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes
      ignore_errors: yes

    - name: Get NAT iptables rules
      shell: "{{ iptables_path }} -nL -t nat"
      register: iptablesrulesnat
      always_run: yes

    - name: Configuring NAT iptables
      command: "{{ iptables_path }} -t nat -I POSTROUTING -s 10.168.0.1/24 -j MASQUERADE -m comment --comment 'OpenVPN'"
      when: iptablesrulesnat.stdout.find("OpenVPN") == -1

    - name: Saving iptables rules
      shell: "{{ iptablessave_path }} > /etc/iptables/rules.v4"

    - name: Service iptables restart
      service: name=iptables-persistent state=restarted enabled=yes

    - name: Service openvpn restart
      service: name=openvpn state=restarted enabled=yes 
